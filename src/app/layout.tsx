"use client"
import type { Metadata } from "next"
import { Geist, Azeret_Mono as Geist_Mono } from "next/font/google"
import "./globals.css"
import Navbar from "../components/layout/Navbar"
import UpperNav from "../components/layout/UpperNav"
import Footer from "@/components/layout/Footer"
import { usePathname } from "next/navigation"
import Background from "@/components/layout/Background"
import Categories from "@/components/layout/Categories"
import { ChevronUp } from "lucide-react"

import { useState, useEffect } from "react"
const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
})

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
})

const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
}

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode
}>) {
  const pathname = usePathname()
  const [images, setImages] = useState<string[]>([])
  const [path, setPath] = useState<string>("")
  const [showScrollTop, setShowScrollTop] = useState(false)

  useEffect(() => {
    setTimeout(() => {
      scrollToTop();
    }, 1000)
    if (
      pathname === "/concrete-estimating" ||
      pathname === "/masonry-estimating" ||
      pathname === "/electrical-estimating" ||
      pathname === "/sitework-estimating" ||
      pathname === "/lumber-takeoff" ||
      pathname === "/metal-estimating"
    ) {
      setImages(["/trades-slider/pic1.webp", "/trades-slider/pic2.webp", "/trades-slider/pic3.webp"])
      setPath("trades")
    } else if (
      pathname === "/cost-estimating" ||
      pathname === "/residential-estimating" ||
      pathname === "/commercial-estimating" ||
      pathname === "/industrial-estimating" ||
      pathname === "/construction-estimating" ||
      pathname === "/construction-estimating-consultants"
    ) {
      setImages([
        "/services-slider/pic1.jpg",
        "/services-slider/pic2.jpg",
        "/services-slider/pic3.jpg",
        "/services-slider/pic4.jpg",
      ])
      setPath("services")
    } else {
      setImages([])
    }
  }, [pathname])

  useEffect(() => {
    
    const handleScroll = () => {
      setShowScrollTop(window.scrollY > 400)
    }

    window.addEventListener("scroll", handleScroll)
    return () => window.removeEventListener("scroll", handleScroll)
  }, [])

  const scrollToTop = () => {
    window.scrollTo({ top: 0, behavior: "smooth" })
  }

  function toTitleCase(str: string) {
    return str
      .replace(/-/g, " ") // Replace hyphens with spaces
      .replace(/\b\w/g, (char: string) => char.toUpperCase()) // Capitalize first letter of each word
  }
  return (
    <html lang="en">
      <head>
        <link rel="preconnect" href="https://fonts.googleapis.com" />
        <link rel="preconnect" href="https://fonts.gstatic.com" crossOrigin="anonymous" />
        <link
          href="https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap"
          rel="stylesheet"
        />
      </head>
      <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
        <UpperNav />
        <Navbar />
        {pathname === "/" || pathname === "/not-found" || pathname === "/about-us" ? (
          <>{children}</>
        ) : (
          <div className="relative top-[140px]">
            <Background text={toTitleCase(pathname.replace("/", "").replace("-", " "))} />
            {pathname !== "/contact-us" ? (
              <Categories
                images={images}
                pathTitle={toTitleCase(pathname.replace("/", "").replace("-", " "))}
                path={path}
              />
            ) : (
              <></>
            )}

            {children}
          </div>
        )}

        {showScrollTop && (
          <button
            onClick={scrollToTop}
            className="fixed bottom-8 right-8 z-50 flex h-12 w-12 items-center justify-center rounded-full bg-[#FF5C28] text-white shadow-lg transition-all hover:bg-[#ff4810]"
            aria-label="Scroll to top"
          >
            <ChevronUp className="h-6 w-6" />
          </button>
        )}
        <Footer />
        <script src="https://kit.fontawesome.com/8c81aee650.js" crossOrigin="anonymous"></script>
      </body>
    </html>
  )
}

